// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DevicesListItem /> Default ConnectToDeviceListItem should match snapshot 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": "100%",
          "justifyContent": "flex-start",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="TouchableOpacityIconButton"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text>
            MockedIcon
          </Text>
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "purple",
            "fontSize": 16,
            "fontWeight": "500",
            "marginLeft": 16,
          }
        }
      >
        Test Device
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": "100%",
          "justifyContent": "flex-start",
          "marginRight": 10,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="TouchableOpacityIconButton"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            testID="ThreeVerticalDotsIcon"
            vbHeight={16}
            vbWidth={16}
            width={25}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M9.5 13a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"
                fill={4286578816}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>,
  <View
    style={
      Object {
        "backgroundColor": "purple",
        "height": 1,
        "marginVertical": 5,
        "opacity": 0.3,
        "width": "100%",
      }
    }
    testID="horizontalSeparator"
  />,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;
